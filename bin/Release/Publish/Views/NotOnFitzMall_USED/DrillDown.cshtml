@model IEnumerable<WebApplication6.Models.NotOnFitzMall_USED>
@{
    int counter = 0;
    bool IsNew = false;
    IsNew = (ViewBag.PriceTitle == "MSRP");
    string thisPriceTitle = ViewBag.PriceTitle;

    // for sorting
    string thisviewSortOrder = ViewBag.SortOrder;

}
<link href="~/Content/tableStyle.css" rel="stylesheet" type="text/css" sizes="">

<h2>@ViewBag.Title</h2>


<table class="table">
    <thead class="thead">

        <tr>
            <th>
                @{ if (thisviewSortOrder != "Location_Descending")
                    {
                        @Html.ActionLink("Location", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Location_Descending" })
                    }
                    else
                    {
                        @Html.ActionLink("Location", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Location" })
                    }
                }
            </th>
            <th >
                @{ if (thisviewSortOrder != "VIN_Descending")
                    {
                        @Html.ActionLink("VIN", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "VIN_Descending" })
                    }
                    else
                    {
                        @Html.ActionLink("VIN", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "VIN" })
                    }
                }
            </th>
            <th>

                @{ if (thisviewSortOrder != "StockNum_Descending")
                    {
                        @Html.ActionLink("Stock#", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "StockNum_Descending" })
                    }
                    else
                    {
                        @Html.ActionLink("Stock#", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "StockNum" })
                    }
                }
            </th>
            <th>
                @{ if (thisviewSortOrder != "Status_Descending")
                    {
                        @Html.ActionLink("Status", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Status_Descending" })
                    }
                    else
                    {
                        @Html.ActionLink("Status", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Status" })
                    }
                }

            </th>
            <th>
                @{ if (thisviewSortOrder != "Year_Descending")
                    {
                        @Html.ActionLink("Year", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Year_Descending" })
                    }
                    else
                    {
                        @Html.ActionLink("Year", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Year" })
                    }
                }
            </th>
            <th>
                @{ if (thisviewSortOrder != "Make_Descending")
                    {
                        @Html.ActionLink("Make", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Make_Descending" })
                    }
                    else
                    {
                        @Html.ActionLink("Make", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Make" })
                    }
                }
            </th>
            <th>
                @{ if (thisviewSortOrder != "Model_Descending")
                    {
                        @Html.ActionLink("Model", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Model_Descending" })
                    }
                    else
                    {
                        @Html.ActionLink("Model", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Model" })
                    }
                }
            </th>
            <th>
                @{ if (thisviewSortOrder != "Color_Descending")
                    {
                        @Html.ActionLink("Color", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Color_Descending" })
                    }
                    else
                    {
                        @Html.ActionLink("Color", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Color" })
                    }
                }
            </th>
            <th style="text-align: center">
                @{ if (thisviewSortOrder != "Photos_Descending")
                    {
                        @Html.ActionLink("Photo Count", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Photos_Descending" })
                    }
                    else
                    {
                        @Html.ActionLink("Photo Count", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Photos" })
                    }
                }
            <th>
                @{ if (thisviewSortOrder != "Chrome_Descending")
                    {
                        @Html.ActionLink("Chrome ID", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Chrome_Descending" })
                    }
                    else
                    {
                        @Html.ActionLink("Chrome ID", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "Chrome" })
                    }
                }
            </th>
            <th>
                @{ if (thisviewSortOrder != "INVOICE_Descending")
                    {
                        @Html.ActionLink("Invoice", "DrillDown", new { StoreBranch = ViewBag.StoreBranch, Make = ViewBag.Make, Status = ViewBag.parStatusCode, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "INVOICE_Descending" })
                    }
                    else
                    {
                        @Html.ActionLink("Invoice", "DrillDown", new { StoreBranch = ViewBag.StoreBranch, Make = ViewBag.Make, Status = ViewBag.parStatusCode, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "INVOICE" })
                    }
                }
            </th>

            <th>
                @{ if (thisviewSortOrder != "MSRP_Descending")
                    {
                        @Html.ActionLink(thisPriceTitle, "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "MSRP_Descending" })
                    }
                    else
                    {
                        @Html.ActionLink(thisPriceTitle, "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "MSRP" })
                    }
                }
            </th>
            <th style="text-align: center">
                @{ if (thisviewSortOrder != "ChromeOptions_Descending")
                    {
                        @Html.ActionLink("Options", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "ChromeOptions_Descending" })
                    }
                    else
                    {
                        @Html.ActionLink("Options", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "ChromeOptions" })
                    }
                }

            </th>


            <th>
                @{ if (thisviewSortOrder != "DaysInStock_Descending")
                    {
                        @Html.ActionLink("Days In Stock", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "DaysInStock_Descending" })
                    }
                    else
                    {
                        @Html.ActionLink("Days In Stock", "DrillDown", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed, sortOrder = "DaysInStock" })
                    }
                }

            </th>

        </tr>
    </thead>

    @foreach (var item in Model)
    {
        counter++;
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LOCATION)
            </td>
            <td>

                @if (item.SERIAL_ != "")
                {
                    @Html.DisplayFor(modelItem => item.SERIAL_)
                }
                else
                {
                    @("-------------");
                }
            </td>
            <td>

                @if (item.STOCK_ != "")
                {
                    @Html.DisplayFor(modelItem => item.STOCK_)
                }
                else
                {
                    @("------");
                }

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.STAT_CODE)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.YEAR)
            </td>
            <td style="text-align: center">
                @Html.DisplayFor(modelItem => item.MAKE)
            </td>
            <td style="text-align: center">
                @Html.DisplayFor(modelItem => item.CARLINE)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EXT_COLOR)
            </td>
            <td @if (item.CustomPhotos == 0) { <text> style="background-color:yellow; width: 80px; text-align: center" </text>  } else { <text> style="width: 80px; text-align: center" </text> }>
                @Html.DisplayFor(modelItem => item.CustomPhotos)
            </td>
            <td @if (item.ChromeStyleID.Value == 0) { <text> style="background-color:yellow; width: 120px" </text>  } else { <text> </text> }>
                @if (item.ChromeStyleID.Value > 0)
                {
                    @Html.DisplayFor(modelItem => item.ChromeStyleID)
                }
                else
                {
                    @("------");
                }
            </td>
            <td @if (item.INVOICE.Value == 0) { <text> style="background-color:yellow; width: 100px" </text>  } else { <text> </text> }>
                @Html.DisplayFor(modelItem => item.INVOICE)
            </td>
            <td @if (item.MSRP.Value == 0) { <text> style="background-color:yellow; width: 100px" </text>  } else { <text> </text> }>
                @Html.DisplayFor(modelItem => item.MSRP)
            </td>
            <td @if (item.ChromeOptions != "Y") { <text> style="background-color:yellow; width: 90px; text-align: center" </text>  } else { <text> style="width: 90px; text-align: center" </text> }>
                @Html.DisplayFor(modelItem => item.ChromeOptions)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DAYS_IN_STOCK)
            </td>

        </tr>

    }

</table>
@counter records.


@Html.ActionLink("Excel", "ExportToExcel", new { Make = ViewBag.Make, StoreBranch = ViewBag.StoreBranch, StatusCode = ViewBag.parStatusCode, NewOrUsed = ViewBag.NewOrUsed })

